name: aws-ecr-action
description: Create Docker images and push into a ECR repository.
author: 'jambam <hs.cho@bucketplace.net>'
inputs:
  access_key_id:
    description: The AWS access key id
    required: true
  secret_access_key:
    description: The AWS secret access key
    required: true
  account_id:
    description: AWS Account ID
    required: true
  app_name:
    description: name of application
    required: true
  auth_token:
    description: token of ops-monster
    required: true
  base_url:
    description: url of ops-monster
    required: false
    default: 'ops.co-workerhou.se/api'
  registry_ids:
    description: A comma-delimited list of AWS account IDs that are associated with the ECR registries. If you do not specify a registry, the default ECR registry is assumed
    required: false
    default: ''
  assume_role:
    description: A role to assume under the account_id account.
    required: false
    default: ''
  repo:
    description: Name of your ECR repository
    required: false
    default: ''
  region:
    description: The AWS region
    required: true
  create_repo:
    description: Set this to true to create the repository if it does not already exist
    required: false
    default: 'false'
  set_repo_policy:
    description: Set this to true to set a policy on the repository
    required: false
    default: 'false'
  repo_policy_file:
    description: Set this to repository policy statement json file. only used if the set_repo_policy is set to true
    required: false
    default: repo-policy.json
  tags:
    description: Comma-separated string of ECR image tags
    required: false
    default: latest
  image_scanning_configuration:
    description: Set this to True if you want AWS to scan your images for vulnerabilities
    required: false
    default: 'false'
  dockerfile:
    description: Name of Dockerfile to use
    required: false
    default: Dockerfile
  extra_build_args:
    description: Extra flags to pass to docker build (see docs.docker.com/engine/reference/commandline/build)
    required: false
    default: ''
  cache_from:
    description: Images to use as cache for the docker build (see `--cache-from` argument docs.docker.com/engine/reference/commandline/build)
    required: false
    default: ''
  path:
    description: Path to Dockerfile, defaults to the working directory
    required: false
    default: .
  prebuild_script:
    description: Relative path from top-level to script to run before Docker build
    required: false
outputs:
  first_repo:
    value: ${{ steps.image-repo.outputs.first_repo }}
    description: 'first image repo'
  second_repo:
    value: ${{ steps.image-repo.outputs.second_repo }}
    description: 'second image repo'
runs:
  using: "composite"
  steps:
    - name: Get Image Repo
      id: image-repo
      uses: bucketplace/image-list-actions@main
      env:
        AUTH_TOKEN: ${{ inputs.auth_token }}
        BASE_URL: ${{ inputs.base_url }}
      with:
        app_name: ${{ inputs.app_name }}
        input_repo: ${{ inputs.repo }}

    - name: Register First Image Repo
      if: ${{ steps.image-repo.outputs.first_repo }}
      uses: bucketplace/docker-ecr-action@main
      with:
        access_key_id: ${{ inputs.access_key_id }}
        secret_access_key: ${{ inputs.secret_access_key }}
        account_id: ${{ inputs.account_id }}
        registry_ids: ${{ inputs.registry_ids }}
        assume_role: ${{ inputs.assume_role }}
        repo: ${{ steps.image-repo.outputs.first_repo }}
        region: ${{ inputs.region }}
        create_repo: ${{ inputs.create_repo }}
        set_repo_policy: ${{ inputs.set_repo_policy }}
        repo_policy_file: ${{ inputs.repo_policy_file }}
        tags: ${{ inputs.tags }}
        image_scanning_configuration: ${{ inputs.image_scanning_configuration }}
        dockerfile: ${{ inputs.dockerfile }}
        extra_build_args: ${{ inputs.extra_build_args }}
        cache_from: ${{ inputs.cache_from }}
        path: ${{ inputs.path }}
        prebuild_script: ${{ inputs.prebuild_script }}

    - name: Register Second Image Repo
      if: ${{ steps.image-repo.outputs.second_repo }}
      uses: bucketplace/docker-ecr-action@main
      with:
        access_key_id: ${{ inputs.access_key_id }}
        secret_access_key: ${{ inputs.secret_access_key }}
        account_id: ${{ inputs.account_id }}
        registry_ids: ${{ inputs.registry_ids }}
        assume_role: ${{ inputs.assume_role }}
        repo: ${{ steps.image-repo.outputs.second_repo }}
        region: ${{ inputs.region }}
        create_repo: ${{ inputs.create_repo }}
        set_repo_policy: ${{ inputs.set_repo_policy }}
        repo_policy_file: ${{ inputs.repo_policy_file }}
        tags: ${{ inputs.tags }}
        image_scanning_configuration: ${{ inputs.image_scanning_configuration }}
        dockerfile: ${{ inputs.dockerfile }}
        extra_build_args: ${{ inputs.extra_build_args }}
        cache_from: ${{ inputs.cache_from }}
        path: ${{ inputs.path }}
        prebuild_script: ${{ inputs.prebuild_script }}
